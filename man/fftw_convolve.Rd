% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brf_distributed_lag.R
\name{fftw_convolve}
\alias{fftw_convolve}
\title{fftw_convolve}
\usage{
fftw_convolve(x, y, normalize = TRUE, align = "center")
}
\arguments{
\item{x}{\code{numeric} vector or single column matrix the data series}

\item{y}{\code{numeric} matrix of filter(s)}

\item{normalize}{\code{logical} do you want the values normalized}

\item{align}{\code{character} what alignment for the convolution}
}
\value{
convolution of data series and filter
}
\description{
Do convolution for a data series and matrix of equal length filters.
For long data series this function will be much faster than non-fft methods.
}
\examples{

library(splines)

knots <- round(10^seq(0.5, 4.635484, length.out = 9))
n_lags <- 86400*2

bla <- ns(0:(n_lags), knots = knots,
          Boundary.knots = c(0, n_lags))
bv <- rnorm(86400*2 + 3600*24*4)
system.time({
dl <- fftw_convolve(bv, bla, normalize = FALSE)
})

}
